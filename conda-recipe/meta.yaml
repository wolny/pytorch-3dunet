{% set version = load_file_regex(load_file="pytorch3dunet/__version__.py", regex_pattern="__version__ = ['\"]([^'\"]+)['\"]")[1] %}

package:
  name: pytorch-3dunet
  version: {{ version }}

source:
  path: ..

build:
  noarch: python
  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation --ignore-installed --no-cache-dir
  number: 0
  entry_points:
    - predict3dunet = pytorch3dunet.predict:main
    - train3dunet = pytorch3dunet.train:main

requirements:
  build:
    - python >=3.11
    - pip
    - setuptools

  run:
    - python >=3.11
    - numpy
    - nomkl
    - tensorboard
    - tqdm
    - h5py
    - scipy
    - scikit-image
    - pyyaml
    - pip

test:
  imports:
    - pytorch3dunet
    - pytorch3dunet.unet3d
    - pytorch3dunet.augment
    - pytorch3dunet.datasets
  requires:
    - pytest
    - pip
  source_files:
    - tests
  commands:
    - pip install torch torchvision --index-url https://download.pytorch.org/whl/cpu
    - pytest -v

about:
  home: https://github.com/wolny/pytorch-3dunet
  summary: 'Versatile U-Net implementation for volumetric semantic segmentation written in PyTorch'
  description: |
    PyTorch implementation of 3D U-Net and its variants for volumetric semantic segmentation and regression tasks.

    Features:
    - Multiple U-Net architectures: UNet3D, ResidualUNet3D, ResidualUNetSE3D
    - Support for both semantic segmentation (binary and multi-class) and regression problems
    - 3D data augmentation pipeline with elastic deformations, rotations, and intensity transforms
    - HDF5-based data loading with configurable preprocessing
    - Multi-GPU training support with automatic DataParallel
    - Comprehensive loss functions: BCE, Dice, Cross-entropy, MSE, and combinations
    - Evaluation metrics: IoU, Dice coefficient, boundary AP, adapted Rand error
    - YAML-based configuration system for reproducible experiments
    - Command-line tools for training and prediction
  license: MIT
