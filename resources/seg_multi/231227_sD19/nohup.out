2023-12-27 16:00:01,510 [MainThread] INFO ConfigLoader - Using 'cuda:0' device
2023-12-27 16:00:01,510 [MainThread] INFO TrainingSetup - {'manual_seed': 0, 'model': {'name': 'UNet3D', 'in_channels': 3, 'out_channels': 3, 'layer_order': 'crg', 'f_maps': 32, 'num_groups': 8, 'final_sigmoid': True, 'is_segmentation': True}, 'trainer': {'checkpoint_dir': '/net/fs01/work01/yasuda/data/multi/231227_sD19', 'resume': '/net/fs01/work01/yasuda/data/multi/231130_sD19/last_checkpoint.pytorch', 'pre_trained': None, 'validate_after_iters': 1000, 'log_after_iters': 100, 'max_num_epochs': 200, 'max_num_iterations': 60000, 'eval_score_higher_is_better': True}, 'optimizer': {'learning_rate': 0.0002, 'weight_decay': 0.0001}, 'loss': {'name': 'DiceLoss', 'weight': None, 'ignore_index': None}, 'eval_metric': {'name': 'MeanIoU', 'ignore_index': None}, 'lr_scheduler': {'name': 'MultiStepLR', 'milestones': [10, 30, 60], 'gamma': 0.2}, 'loaders': {'dataset': 'StandardHDF5Dataset', 'batch_size': 1, 'num_workers': 4, 'raw_internal_path': 'raw', 'label_internal_path': 'label', 'weight_internal_path': None, 'train': {'file_paths': ['/net/fs01/work01/yasuda/data/140x900x900/sD19_3times/train/4d_sD19_3times_8bit_raw.h5'], 'slice_builder': {'name': 'SliceBuilder', 'patch_shape': [32, 64, 64], 'stride_shape': [8, 16, 16]}, 'transformer': {'raw': [{'name': 'Standardize'}, {'name': 'RandomFlip'}, {'name': 'RandomRotate90'}, {'name': 'RandomRotate', 'axes': [[2, 1]], 'angle_spectrum': 15, 'mode': 'reflect'}, {'name': 'ElasticDeformation', 'spline_order': 3}, {'name': 'RandomContrast'}, {'name': 'AdditiveGaussianNoise'}, {'name': 'AdditivePoissonNoise'}, {'name': 'ToTensor', 'expand_dims': True}], 'label': [{'name': 'RandomFlip'}, {'name': 'RandomRotate90'}, {'name': 'RandomRotate', 'axes': [[2, 1]], 'angle_spectrum': 15, 'mode': 'reflect'}, {'name': 'ElasticDeformation', 'spline_order': 0}, {'name': 'ToTensor', 'expand_dims': True}]}}, 'val': {'file_paths': ['/net/fs01/work01/yasuda/data/140x900x900/sD19_3times/val/4d_sD19_3times_8bit_raw.h5'], 'slice_builder': {'name': 'SliceBuilder', 'patch_shape': [32, 64, 64], 'stride_shape': [32, 64, 64]}, 'transformer': {'raw': [{'name': 'Standardize'}, {'name': 'ToTensor', 'expand_dims': True}], 'label': [{'name': 'ToTensor', 'expand_dims': True}]}}}, 'device': device(type='cuda', index=0)}
2023-12-27 16:00:01,510 [MainThread] INFO TrainingSetup - Seed the RNG for all devices with 0
2023-12-27 16:00:04,189 [MainThread] INFO UNet3DTrainer - Using 4 GPUs for training
2023-12-27 16:00:04,189 [MainThread] INFO UNet3DTrainer - Sending the model to 'cuda:0'
2023-12-27 16:00:16,706 [MainThread] INFO UNet3DTrainer - Number of learnable params 4081811
2023-12-27 16:00:16,707 [MainThread] INFO Dataset - Creating training and validation set loaders...
2023-12-27 16:00:19,079 [MainThread] INFO HDF5Dataset - Loading train set from: /net/fs01/work01/yasuda/data/140x900x900/sD19_3times/train/4d_sD19_3times_8bit_raw.h5...
2023-12-27 16:00:45,250 [MainThread] INFO HDF5Dataset - Input stats: min=0, max=255, mean=118.7814913580247, std=7.388032220646554
2023-12-27 16:01:09,398 [MainThread] INFO Dataset - Slice builder config: {'name': 'SliceBuilder', 'patch_shape': [32, 64, 64], 'stride_shape': [8, 16, 16]}
2023-12-27 16:01:09,936 [MainThread] INFO HDF5Dataset - Number of patches: 43740
2023-12-27 16:01:09,939 [MainThread] INFO HDF5Dataset - Loading val set from: /net/fs01/work01/yasuda/data/140x900x900/sD19_3times/val/4d_sD19_3times_8bit_raw.h5...
2023-12-27 16:01:36,079 [MainThread] INFO HDF5Dataset - Input stats: min=0, max=255, mean=118.7814913580247, std=7.388032220646554
2023-12-27 16:01:59,456 [MainThread] INFO Dataset - Slice builder config: {'name': 'SliceBuilder', 'patch_shape': [32, 64, 64], 'stride_shape': [32, 64, 64]}
2023-12-27 16:01:59,463 [MainThread] INFO HDF5Dataset - Number of patches: 1125
2023-12-27 16:01:59,464 [MainThread] INFO Dataset - Number of workers for train/val dataloader: 4
2023-12-27 16:01:59,464 [MainThread] INFO Dataset - 4 GPUs available. Using batch_size = 4 * 1
2023-12-27 16:01:59,465 [MainThread] INFO Dataset - Batch size for train/val loader: 4
2023-12-27 16:01:59,467 [MainThread] INFO UNet3DTrainer - Loading checkpoint '/net/fs01/work01/yasuda/data/multi/231130_sD19/last_checkpoint.pytorch'...
Traceback (most recent call last):
  File "/home/people/yasuda/.conda/envs/3dunet/bin/train3dunet", line 10, in <module>
    sys.exit(main())
  File "/home/people/yasuda/.conda/envs/3dunet/lib/python3.9/site-packages/pytorch3dunet-1.3.3-py3.9.egg/pytorch3dunet/train.py", line 27, in main
  File "/home/people/yasuda/.conda/envs/3dunet/lib/python3.9/site-packages/pytorch3dunet-1.3.3-py3.9.egg/pytorch3dunet/unet3d/trainer.py", line 101, in build
  File "/home/people/yasuda/.conda/envs/3dunet/lib/python3.9/site-packages/pytorch3dunet-1.3.3-py3.9.egg/pytorch3dunet/unet3d/trainer.py", line 33, in _create_trainer
  File "/home/people/yasuda/.conda/envs/3dunet/lib/python3.9/site-packages/pytorch3dunet-1.3.3-py3.9.egg/pytorch3dunet/unet3d/trainer.py", line 191, in from_checkpoint
  File "/home/people/yasuda/.conda/envs/3dunet/lib/python3.9/site-packages/pytorch3dunet-1.3.3-py3.9.egg/pytorch3dunet/unet3d/utils.py", line 64, in load_checkpoint
  File "/home/people/yasuda/.conda/envs/3dunet/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1482, in load_state_dict
    raise RuntimeError('Error(s) in loading state_dict for {}:\n\t{}'.format(
RuntimeError: Error(s) in loading state_dict for DataParallel:
	Missing key(s) in state_dict: "module.encoders.0.basic_module.SingleConv1.conv.weight", "module.encoders.0.basic_module.SingleConv1.groupnorm.weight", "module.encoders.0.basic_module.SingleConv1.groupnorm.bias", "module.encoders.0.basic_module.SingleConv2.conv.weight", "module.encoders.0.basic_module.SingleConv2.groupnorm.weight", "module.encoders.0.basic_module.SingleConv2.groupnorm.bias", "module.encoders.1.basic_module.SingleConv1.conv.weight", "module.encoders.1.basic_module.SingleConv1.groupnorm.weight", "module.encoders.1.basic_module.SingleConv1.groupnorm.bias", "module.encoders.1.basic_module.SingleConv2.conv.weight", "module.encoders.1.basic_module.SingleConv2.groupnorm.weight", "module.encoders.1.basic_module.SingleConv2.groupnorm.bias", "module.encoders.2.basic_module.SingleConv1.conv.weight", "module.encoders.2.basic_module.SingleConv1.groupnorm.weight", "module.encoders.2.basic_module.SingleConv1.groupnorm.bias", "module.encoders.2.basic_module.SingleConv2.conv.weight", "module.encoders.2.basic_module.SingleConv2.groupnorm.weight", "module.encoders.2.basic_module.SingleConv2.groupnorm.bias", "module.encoders.3.basic_module.SingleConv1.conv.weight", "module.encoders.3.basic_module.SingleConv1.groupnorm.weight", "module.encoders.3.basic_module.SingleConv1.groupnorm.bias", "module.encoders.3.basic_module.SingleConv2.conv.weight", "module.encoders.3.basic_module.SingleConv2.groupnorm.weight", "module.encoders.3.basic_module.SingleConv2.groupnorm.bias", "module.decoders.0.basic_module.SingleConv1.conv.weight", "module.decoders.0.basic_module.SingleConv1.groupnorm.weight", "module.decoders.0.basic_module.SingleConv1.groupnorm.bias", "module.decoders.0.basic_module.SingleConv2.conv.weight", "module.decoders.0.basic_module.SingleConv2.groupnorm.weight", "module.decoders.0.basic_module.SingleConv2.groupnorm.bias", "module.decoders.1.basic_module.SingleConv1.conv.weight", "module.decoders.1.basic_module.SingleConv1.groupnorm.weight", "module.decoders.1.basic_module.SingleConv1.groupnorm.bias", "module.decoders.1.basic_module.SingleConv2.conv.weight", "module.decoders.1.basic_module.SingleConv2.groupnorm.weight", "module.decoders.1.basic_module.SingleConv2.groupnorm.bias", "module.decoders.2.basic_module.SingleConv1.conv.weight", "module.decoders.2.basic_module.SingleConv1.groupnorm.weight", "module.decoders.2.basic_module.SingleConv1.groupnorm.bias", "module.decoders.2.basic_module.SingleConv2.conv.weight", "module.decoders.2.basic_module.SingleConv2.groupnorm.weight", "module.decoders.2.basic_module.SingleConv2.groupnorm.bias", "module.final_conv.weight", "module.final_conv.bias". 
	Unexpected key(s) in state_dict: "encoders.0.basic_module.SingleConv1.conv.weight", "encoders.0.basic_module.SingleConv1.groupnorm.weight", "encoders.0.basic_module.SingleConv1.groupnorm.bias", "encoders.0.basic_module.SingleConv2.conv.weight", "encoders.0.basic_module.SingleConv2.groupnorm.weight", "encoders.0.basic_module.SingleConv2.groupnorm.bias", "encoders.1.basic_module.SingleConv1.conv.weight", "encoders.1.basic_module.SingleConv1.groupnorm.weight", "encoders.1.basic_module.SingleConv1.groupnorm.bias", "encoders.1.basic_module.SingleConv2.conv.weight", "encoders.1.basic_module.SingleConv2.groupnorm.weight", "encoders.1.basic_module.SingleConv2.groupnorm.bias", "encoders.2.basic_module.SingleConv1.conv.weight", "encoders.2.basic_module.SingleConv1.groupnorm.weight", "encoders.2.basic_module.SingleConv1.groupnorm.bias", "encoders.2.basic_module.SingleConv2.conv.weight", "encoders.2.basic_module.SingleConv2.groupnorm.weight", "encoders.2.basic_module.SingleConv2.groupnorm.bias", "encoders.3.basic_module.SingleConv1.conv.weight", "encoders.3.basic_module.SingleConv1.groupnorm.weight", "encoders.3.basic_module.SingleConv1.groupnorm.bias", "encoders.3.basic_module.SingleConv2.conv.weight", "encoders.3.basic_module.SingleConv2.groupnorm.weight", "encoders.3.basic_module.SingleConv2.groupnorm.bias", "decoders.0.basic_module.SingleConv1.conv.weight", "decoders.0.basic_module.SingleConv1.groupnorm.weight", "decoders.0.basic_module.SingleConv1.groupnorm.bias", "decoders.0.basic_module.SingleConv2.conv.weight", "decoders.0.basic_module.SingleConv2.groupnorm.weight", "decoders.0.basic_module.SingleConv2.groupnorm.bias", "decoders.1.basic_module.SingleConv1.conv.weight", "decoders.1.basic_module.SingleConv1.groupnorm.weight", "decoders.1.basic_module.SingleConv1.groupnorm.bias", "decoders.1.basic_module.SingleConv2.conv.weight", "decoders.1.basic_module.SingleConv2.groupnorm.weight", "decoders.1.basic_module.SingleConv2.groupnorm.bias", "decoders.2.basic_module.SingleConv1.conv.weight", "decoders.2.basic_module.SingleConv1.groupnorm.weight", "decoders.2.basic_module.SingleConv1.groupnorm.bias", "decoders.2.basic_module.SingleConv2.conv.weight", "decoders.2.basic_module.SingleConv2.groupnorm.weight", "decoders.2.basic_module.SingleConv2.groupnorm.bias", "final_conv.weight", "final_conv.bias". 
